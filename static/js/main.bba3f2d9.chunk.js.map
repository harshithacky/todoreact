{"version":3,"sources":["Item.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","className","aria-hidden","onClick","onSelect","id","itemval","App","useState","inputVal","setInputVal","items","setItems","deleteItem","oldvalue","filter","elem","index","placeholder","onChange","event","target","value","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAUeA,EAVF,SAACC,GACV,OACI,mCACA,sBAAKC,UAAU,aAAf,UACE,mBAAGA,UAAU,cAAcC,cAAY,OAAOC,QAAS,kBAAIH,EAAMI,SAASJ,EAAMK,OAChF,6BAAKL,EAAMM,gBCyCNC,EA5CH,WAEV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaMC,EAAa,SAACR,GAClBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAAKC,GAC3B,OAAOZ,IAAKY,SAKlB,OACE,mCACE,qBAAKhB,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAOiB,YAAY,gBAAgBC,SA1BxB,SAACC,GAClBV,EAAYU,EAAMC,OAAOC,QAyBsCA,MAAOb,IAChE,wBAAQN,QAvBI,WAClBS,GAAU,SAACE,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAY,KAmBN,iBACA,6BACGC,EAAMY,KAAK,SAACjB,EAASW,GACrB,MAAiB,KAAVX,EAAc,cAAC,EAAD,CAAMA,QAASA,EAAqBD,GAAIY,EAAOb,SAAUS,GAA5BI,GAA0C,kBCzB1FO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bba3f2d9.chunk.js","sourcesContent":["const Item = (props) => {\r\n    return (\r\n        <>\r\n        <div className=\"todo_style\">\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>props.onSelect(props.id)}/>\r\n          <li>{props.itemval}</li>\r\n        </div>\r\n        </>);\r\n}\r\n\r\nexport default Item;","import React, {useState} from 'react';\nimport Item from './Item';\nconst App = () => {\n\n  const [inputVal, setInputVal] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const inputEvent = (event) => {\n    setInputVal(event.target.value);\n  };\n\n  const listOfItems = () => {\n    setItems( (oldvalue) => {\n      return [...oldvalue, inputVal];\n    } )\n    setInputVal(\"\");\n  };\n\n  const deleteItem = (id) => {\n    setItems((oldvalue)=>{\n      return oldvalue.filter((elem,index)=>{\n        return id!==index;\n      })\n    })\n  }\n\n  return(\n    <>\n      <div className='main_div'>\n        <div className='center_div'>\n          <br/>\n          <h1>ToDo List</h1>\n          <br/>\n          <input placeholder='Enter an item' onChange={inputEvent} value={inputVal}/>\n          <button onClick={listOfItems}> + </button>\n          <ol>\n            {items.map( (itemval, index) => {\n             return itemval!==\"\"? <Item itemval={itemval} key={index} id={index} onSelect={deleteItem}/>:null\n            } )}\n          </ol>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}